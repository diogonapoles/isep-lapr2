@startuml
autonumber
actor "Administrator" as ADM


participant ":ListEmployeesUI" as UI
participant ":ListEmployeesController" as CTRL
participant ":ListEmployeesUI" as UI
participant ":ListEmployeesController" as CTRL
participant "Application" as APP
participant "app\n:Application" as App
participant "comp:Company" as COMP
participant "gre\n:EmployeeStore" as ES
participant "emp: Employee" as EMP
participant "auth\n:AuthFacade" as AF
participant ":UserRoleStore" as URS
participant ":UserRoleMapper" as URM
participant "lRolesDTO\n: List<UserRoleDTO>" as lRDTO
participant "sRoles\n: Set<UserRole>" as SR
participant "rl\n List<String> RolesList" as rl


activate ADM

ADM -> UI : asks to return list of Employees     .
activate UI

UI -> CTRL : rl = getRoles()
activate CTRL

CTRL -> APP : app = getInstance()
activate APP
deactivate APP

CTRL -> App : comp = getCompany()
activate App
deactivate App


CTRL -> COMP: auth = getAuthFacade()
activate COMP


CTRL -> COMP: lRoles = getRoles()
deactivate COMP


CTRL -> AF : lRolesDTO = getUserRoles()
activate AF

AF -> URS : sRoles = getAll()
activate URS
deactivate URS

AF -> URM :  toDTO(sRoles)
activate URM

deactivate URM
deactivate AF
deactivate CTRL

UI --> ADM : ask to select employee role
deactivate UI



ADM -> UI : selects the requested role
activate UI



UI -> CTRL : getListEmployees(role)
activate CTRL

CTRL -> COMP : gre = getEmployeeStore()
activate COMP
deactivate COMP

CTRL -> ES : getListEmployees()
activate ES


ES --> EMP** : getn iListEmployees()
                                     note over EMP : **emp** might be anstance of Nurse, Receptionist or CenterCoordinator.\nIt depends of the type of Employee requested to be listed.


ES -> ES : ListEmployeesByRole(role)
activate ES
deactivate ES
deactivate ES





deactivate CTRL
deactivate ES

UI --> ADM : shows required list
deactivate UI



deactivate ADM

@enduml